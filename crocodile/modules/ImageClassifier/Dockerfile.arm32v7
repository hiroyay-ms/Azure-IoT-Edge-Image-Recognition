FROM arm32v7/python:3.7-slim-buster

ARG DOWNLOAD_LINK=https://storage.openvinotoolkit.org/repositories/openvino/packages/2021.4/l_openvino_toolkit_runtime_raspbian_p_2021.4.582.tgz
ARG INSTALL_DIR=/opt/intel/openvino

RUN apt-get update && apt-get upgrade && apt-get install -y --no-install-recommends \
        libatlas-base-dev \
        libtool \
        lsb-release \
        python3 \
        python3-pip \
        build-essential \
        python3-dev \
        python3-scipy \
        libopenjp2-7-dev \
        libtiff5-dev \
        libtiff-dev \
        zlib1g-dev \
        libjpeg-dev \
        libatlas-base-dev \
        libhdf5-dev \
        libhdf5-serial-dev \
        libgtk2.0-dev \
        libgtk-3-0 \
        libcanberra-gtk* \
        libv4l-dev \
        libxvidcore-dev \
        libx264-dev \
        libopenexr-dev \
        libharfbuzz-dev \
        libwebp-dev \
        libilmbase-dev \
        libavcodec-dev \
        libavformat-dev \
        libswscale-dev \
        libqt4-dev \
        libboost-python-dev \
        dh-autoreconf \
        pkg-config \
        unzip \
        sudo \
        udev \
        gnupg2 \
        wget \
        && rm -rf /var/lib/apt/lists/* \
        && apt-get -y autoremove

RUN pip3 install --upgrade pip
RUN pip3 install --upgrade setuptools

RUN wget https://github.com/lhelontra/tensorflow-on-arm/releases/download/v2.0.0/tensorflow-2.0.0-cp37-none-linux_armv7l.whl
RUN pip3 uninstall tensorflow
RUN pip3 install tensorflow-2.0.0-cp37-none-linux_armv7l.whl --extra-index-url https://www.piwheels.org/simple

RUN mkdir -p $INSTALL_DIR && cd $INSTALL_DIR && \
        wget -c $DOWNLOAD_LINK && \
        tar xf l_openvino_toolkit_runtime_raspbian_p*.tgz --strip 1 -C $INSTALL_DIR

COPY requirements.txt ./ 

RUN pip3 install -r requirements.txt --extra-index-url https://www.piwheels.org/simple

ENV PYTHONPATH $PYTHONPATH:/usr/local/lib/python3.7/dist-packages
ENV PYTHONPATH $PYTHONPATH:${INSTALL_DIR}//python/python3.7
ENV PYTHONPATH $PYTHONPATH:${INSTALL_DIR}/python/python3
ENV PYTHONPATH $PYTHONPATH:${INSTALL_DIR}/deployment_tools/model_optimizer
ENV PYTHONPATH $PYTHONPATH:${INSTALL_DIR}/data_processing/dl_streamer/python
ENV PYTHONPATH $PYTHONPATH:${INSTALL_DIR}/data_processing/gstreamer/lib/python3.8/site-packages
ENV PATH $PATH:/opt/intel/openvino/deployment_tools/model_optimizer
ENV PATH $PATH:/opt/intel/openvino/data_processing/gstreamer/bin
ENV PATH $PATH:/opt/intel/openvino/data_processing/gstreamer/bin/gstreamer-1.0

WORKDIR /opt
RUN wget -L https://github.com/libusb/libusb/archive/v1.0.22.zip && \
    unzip v1.0.22.zip
 
WORKDIR /opt/libusb-1.0.22
RUN ./bootstrap.sh && \
    ./configure --disable-udev --enable-shared && \
    make -j4
 
WORKDIR /opt/libusb-1.0.22/libusb
RUN /bin/mkdir -p '/usr/local/lib' && \
    /bin/bash ../libtool --mode=install /usr/bin/install -c   libusb-1.0.la '/usr/local/lib' && \
    /bin/mkdir -p '/usr/local/include/libusb-1.0' && \
    /usr/bin/install -c -m 644 libusb.h '/usr/local/include/libusb-1.0' && \
    /bin/mkdir -p '/usr/local/lib/pkgconfig'
 
WORKDIR /opt/libusb-1.0.22/
RUN /usr/bin/install -c -m 644 libusb-1.0.pc '/usr/local/lib/pkgconfig' && \
    cp ${INSTALL_DIR}/deployment_tools/inference_engine/external/97-myriad-usbboot.rules /etc/udev/rules.d/ && \
    ldconfig

COPY app /app

WORKDIR /app

CMD [ "./startup.sh" ]
